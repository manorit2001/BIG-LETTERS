#!/usr/bin/python3
import sys
import time
import random
import subprocess as sp
dict = {
    'A':	        ["////////",
                  "//    //",
                  "////////",
                  "//    //",
                  "//    //"],
    'B':

    ['////////',
     '//    //',
     '////////',
     '//    //',
     '////////'],
    'C':

    ['////////',
     '//',
     '//',
     '//',
     '////////', ],
    'D':
    ['/////',
     '//   //',
     '//    //',
     '//   //',
     '/////'],
    'E':
    ['////////',
     '//',
     '//////',
     '//',
     '////////', ],
    'F':
    ['////////',
     '//',
     '//////',
     '//',
     '//'],
    'G':
    ['////////',
     '//',
     '//  ////',
     '//    //',
     '////////'],
    'H':
    ['//    //',
     '//    //',
     '////////',
     '//    //',
     '//    //'],
    'I':
    ['////////',
     '   //',
     '   //',
     '   //',
     '////////'],
    'J':
    [' ///////',
     '      //',
     '//    //',
     '//    //',
     '////////'],
    'K':
    ['//   ///',
     '// ///',
     '//////',
     '// ///',
     '//   ///'],
    'L':
    ['//      ',
     '//      ',
     '//      ',
     '//      ',
     '////////'],
    'M':
    ['//    //',
     '///  ///',
     '// // //',
     '//    //',
     '//    //'],
    'N':
    ['//    //',
     '///   //',
     '// // //',
     '//   ///',
     '//    //'],
    'O':
    ['////////',
     '//    //',
     '//    //',
     '//    //',
     '////////'],
    'P':
    ['////////',
     '//    //',
     '////////',
     '//',
     '//'],

    'Q':
    ['////////',
     '//    //',
     '////  //',
     '//  ////',
     '////////'],
    'R':
    ['////////',
     '//    //',
     '////////',
     '////// ',
     '//  ////'],
    'S':
    ['  ///// ',
     '///     ',
     '  ///// ',
     '      //',
     ' ////// '],
    'T':
    ['////////',
     '   //',
     '   //',
     '   //',
     '   //'],
    'U':
    ['//    //',
     '//    //',
     '//    //',
     '//    //',
     '////////'],
    'V':
    ['//     //',
     ' //   //',
     '  // //',
     '   ///',
     '    /'],
    'W':
    ['//    //',
     '//    //',
     '// // //',
     '///  ///',
     '//    //'],
    'X':
    ['//    //',
     ' //  //',
     '   //   ',
     ' //  //',
     '//    //'],
    'Y':
    ['//    //',
     ' //  //',
     '   //   ',
     '   //   ',
     '   //   '],
    'Z':
    ['////////',
     '     //',
     '   //',
     ' //',
     '////////'],
    '?':            ['  ///// ',
                     '//  ////',
                     '   ///  ',
                     '        ',
                     '   //   '],
    '-':             ['        ',
                      '        ',
                      ' /////  ',
                      '        ',
                      '        '],
    '1':             ['   //   ',
                      ' ////   ',
                      '   //   ',
                      '   //   ',
                      '   //   '],
    '2':             [' /////  ',
                      '//  /// ',
                      '  ///   ',
                      ' //     ',
                      '////////'],
    '3':             ['////////',
                      '      //',
                      '  //////',
                      '      //',
                      '////////'],
    '4':             ['//    //',
                      '//    //',
                      '////////',
                      '      //',
                      '      //'],
    '5':             ['////////',
                      '//      ',
                      '////////',
                      '      //',
                      '////////'],
    '6':             ['////////',
                      '//      ',
                      '////////',
                      '//    //',
                      '////////'],
    '7':             ['////////',
                      '    /// ',
                      '   ///  ',
                      '  ///   ',
                      ' ///    '],
    '8':             ['////////',
                      '//    //',
                      '////////',
                      '//    //',
                      '////////'],
    '9':             ['////////',
                      '//    //',
                      '////////',
                      '      //',
                      '  //////'],
    '0':             [' ////// ',
                      ' //  // ',
                      ' //  // ',
                      ' //  // ',
                      ' ////// '],
    '!':             ['  ////  ',
                      '  ////  ',
                      '  ////  ',
                      '        ',
                      '   //   '],
    ' ':	['', '', '', '', '']

}
character = '/'


def transform(s, c=character):
    return s.replace('/', c)


# c='W'
# str="V"
# while(c<='Z '):
#	str+ =c
#	c=ch r(ord(c)+1)
# sp.call("clear || cls", shell=True)
if(len(sys.argv) < 3):
    print('''usage: design.py length_of_console character text''')
    sys.exit()
else:
    character = sys.argv[2]
    stri = ' '.join(sys.argv[3:])
    leng = int(sys.argv[1])
maxletters = (int(sys.argv[1])//9)-1
try:
    #batches=[str.upper()[i:i+maxletters] for i in range(0,len(str),maxletters)]
    temp = stri.upper().split()
    batches = [""]
    for i in temp:
        if(len(batches[-1])+len(i) < maxletters):
            batches[-1] += i+' '
        else:
            batches += [i+' ']
    for x in batches:
        for j in range(5):
            temp = ''
            for i in x:
                assert len(dict[i][j].ljust(8)) <= 8
                temp += dict[i][j].ljust(8)
                temp += ' '
            temp = transform(temp,character)
            print(temp.center(leng))
            # time.sleep(random.randint(1,3))
        print()
except AssertionError as e:
    e.args += ("letter", i)
    raise